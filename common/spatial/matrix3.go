// Package spatial 空間座標操作パッケージ
package spatial

// Matrix3 3×3行列の構造体
type Matrix3 [3][3]float64 // 行列成分

// NewMatrix3 コンストラクタ
//
// 3×3行列の構造体のコンストラクタ
//
// 引数：
//  m00~m22：行列成分
//
// 戻り値：
//  3×3行列の構造体
func NewMatrix3(m00, m01, m02, m10, m11, m12, m20, m21, m22 float64) Matrix3 {
	return Matrix3{
		{m00, m01, m02},
		{m10, m11, m12},
		{m20, m21, m22},
	}
}

// NewUnitMatrix3 単位行列コンストラクタ
//
// 3×3単位行列の構造体のコンストラクタ
//
// 戻り値：
//  3×3単位行列の構造体
func NewUnitMatrix3() Matrix3 {
	return NewMatrix3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)
}

// Mul 行列積
//
// 3×3行列の行列積 a * b を返却
//
// 引数：
//  b：3×3行列
//
// 戻り値：
//  3×3行列の行列積
func (a Matrix3) Mul(b Matrix3) Matrix3 {
	var out Matrix3
	out[0][0] = a[0][0]*b[0][0] + a[0][1]*b[1][0] + a[0][2]*b[2][0]
	out[0][1] = a[0][0]*b[0][1] + a[0][1]*b[1][1] + a[0][2]*b[2][1]
	out[0][2] = a[0][0]*b[0][2] + a[0][1]*b[1][2] + a[0][2]*b[2][2]
	out[1][0] = a[1][0]*b[0][0] + a[1][1]*b[1][0] + a[1][2]*b[2][0]
	out[1][1] = a[1][0]*b[0][1] + a[1][1]*b[1][1] + a[1][2]*b[2][1]
	out[1][2] = a[1][0]*b[0][2] + a[1][1]*b[1][2] + a[1][2]*b[2][2]
	out[2][0] = a[2][0]*b[0][0] + a[2][1]*b[1][0] + a[2][2]*b[2][0]
	out[2][1] = a[2][0]*b[0][1] + a[2][1]*b[1][1] + a[2][2]*b[2][1]
	out[2][2] = a[2][0]*b[0][2] + a[2][1]*b[1][2] + a[2][2]*b[2][2]
	return out
}

// MulVec ベクトルの行列変換
//
// ベクトルを行列変換した値 a・v を返却する
//
// 引数：
//  v ：変換元のベクトル
//
// 戻り値：
//  行列返還後のベクトル
func (a Matrix3) MulVec(v Vector3) Vector3 {
	return Vector3{
		v.X*a[0][0] + v.Y*a[0][1] + v.Z*a[0][2],
		v.X*a[1][0] + v.Y*a[1][1] + v.Z*a[1][2],
		v.X*a[2][0] + v.Y*a[2][1] + v.Z*a[2][2],
	}
}
